"use strict";require("core-js/modules/es7.symbol.async-iterator"),require("core-js/modules/es6.symbol"),require("core-js/modules/web.dom.iterable"),require("core-js/modules/es6.regexp.split"),require("core-js/modules/es6.regexp.replace"),require("core-js/modules/es6.regexp.match");function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}function _arrayWithHoles(a){if(Array.isArray(a))return a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var BacktickProcessor=function(){function a(b){_classCallCheck(this,a);var c=this;c.sp=b,c.state={inBacktick:!1,inBacktickExpr:!1,btString:"",exprBody:"",exprBraceDepth:0}}return _createClass(a,[{key:"lex",value:function r(a){var b=this,c=b.state;if("`"===a.yytext&&(c.inBacktick=!c.inBacktick),c.inBacktick){var s;c.btString="";for(var d=/^(?:([\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*)\$\{((?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*))/g,e=/^((?:[\0-z\|~-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)(\{|\})((?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)/g,f=/^((?:\\`|(?:[\0-_a-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])(?!\{))*)((?:[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)/g;;){if(1>a._input.length&&(console.log("input exhausted."),process.exit()),c.inBacktickExpr){if(s=a._input.match(e),s){var g=e.exec(a._input),h=_slicedToArray(g,4),i=h[0],j=h[1],k=h[2],l=h[3];if(c.exprBody+=j,"{"===k)c.exprBraceDepth+=1,c.exprBody+="{";else if("}"===k)if(0<c.exprBraceDepth)c.exprBraceDepth-=1,c.exprBody+="}";else{c.inBacktickExpr=!1;var t=b.sp.traverse(b.sp.parse(c.exprBody+";")).translation.replace(/;$/,"");c.exprBody="",c.btString+=t+"}",c.inBacktick=!0}a._input=l,a.match=j+k,a.yytext+=a.match,a.matched+=a.match;continue}console.log("brace misalignment."),process.exit()}if(s=a._input.match(d),s){var m=d.exec(a._input),n=_slicedToArray(m,3),o=n[0],p=n[1],q=n[2];c.inBacktick=!1,c.inBacktickExpr=!0,c.exprBraceDepth=0,a._input=q,a.match=p+"${",a.yytext+=a.match,a.matched+=a.match,c.btString+=a.match;continue}if(s=a._input.match(f),s){if("`"===a._input[0]){a._input=a._input.substr(1),a.yytext+="`",a.match="`",a.matched+="`",c.inBacktick=!1;break}a._input=a._input.replace(f,function(b,c,d){var e=c.split("\n"),f=e.pop().length,g=e.length,h=a.yylloc.last_column;return 0<g?h=f:h+=f,a.yylloc={first_line:a.yylloc.last_line,first_column:a.yylloc.last_column,last_line:a.yylloc.last_line+g,last_column:h},a.match=c,a.matched+=a.match,d}),c.btString+=a.match,a.yytext+=a.match;continue}console.log("Backtick Processor in bad state."),process.exit()}return a.yy.scopeState.btString="`"+c.btString+"`",c.btString="","`"}return!1}}]),a}();module.exports=BacktickProcessor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,