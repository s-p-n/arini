public stylesheet = [
	".pick" = [
		padding = 10,
		margin = 10,
		flex = 200,
		background = "rgb(29, 163, 105)",
		box-shadow = "5px 5px 10px rgba(0, 0, 0, 0.3)",
		transition = ".5s",
		":hover" = [
			cursor = "pointer",
			box-shadow-color = "rgba(0,0,0,1)",
			background-color = "rgb(39, 200, 125)"
		]
	],
	".picks" = [
		display = "flex",
		flex-direction = "both"

	]
];

private arrayToCss(rules) {
	let result = "";
	rules.each(#(selector, body) {
		result += `${selector}{`;
		body.each(#(name, value) {
			if (scope.getType(value) is "array") {
				result += `}${arrayToCss([(selector + name) = value])}`;
				result += `${selector}{`;
			} else {
				if (scope.getType(value) is "number") {
					value = `${value}px`;
				};
				result += `${name}:${value};`;
			};
		});
		result += "}";
	});
	return result;
};

public Style (props) {
	let children = props.children;
	let result = children.map(arrayToCss);
	console.log(result);
	return <style>result;</style>;
};

public Pick (props) {
	return 
	<div class="pick">
		<h3>props.title;</h3>;
		<p>props.teaser;</p>;
	</div>;
};

public Picks (props) {
	return
	<div class="picks">
		props.children;
	</div>;
};
