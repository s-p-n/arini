#!/usr/bin/env node
var root="undefined"!=typeof window?window:"undefined"!=typeof root?root:{},Console=function(){function e(e){return function(n){e(n.replace(/\n/g,"")),rl.pause()}}var n=require("readline");return{write:function(){console.log.apply(null,Array.prototype.slice.call(arguments,arguments))},read:function(r){var t=n.createInterface({input:process.stdin,output:process.stdout});t.on("line",e(r)),t.resume()}}}(),$$$runtimeError=function(e,n,r){throw new Error("[31m[1m Runtime Error:[0m[1m "+n.replace(/%what%/g,r).replace(/%red%/g,"[31m").replace(/%default%/g,"[0m[1m").replace(/%green%/g,"[32m")+"[1m on line: [31m"+e+"[0m")},Type=function(e){if(e instanceof Array)return"array";switch(typeof e){case"string":return"text";case"function":return"scope";case"object":return"instance"}return typeof e};!function(){("instance"!==Type(Console)?$$$runtimeError(1,"%default%Only the %green%instance%default% type may contain properties, %red%"+Type(Console)+"%default% given",Console):Console).write(!0),("instance"!==Type(Console)?$$$runtimeError(2,"%default%Only the %green%instance%default% type may contain properties, %red%"+Type(Console)+"%default% given",Console):Console).write(!1),("instance"!==Type(Console)?$$$runtimeError(3,"%default%Only the %green%instance%default% type may contain properties, %red%"+Type(Console)+"%default% given",Console):Console).write(!1),("instance"!==Type(Console)?$$$runtimeError(4,"%default%Only the %green%instance%default% type may contain properties, %red%"+Type(Console)+"%default% given",Console):Console).write(!0)}();